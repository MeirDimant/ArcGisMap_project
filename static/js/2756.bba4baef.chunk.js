"use strict";(self.webpackChunkmy_assignment=self.webpackChunkmy_assignment||[]).push([[2756],{95136:(e,r,t)=>{t.r(r),t.d(r,{default:()=>y});t(99912);var s=t(86328),o=t(90752),i=t(95424),n=t(68673),l=t(40868),a=t(29884),c=t(38008),m=t(68296),f=t(68984),u=t(7061),S=t(64828),d=t(31004),p=t(53372);class y{convertVectorFieldData(e){const r=o.c.fromJSON(e.pixelBlock),t=(0,m.Ws)(r,e.type);return Promise.resolve(null!=t?t.toJSON():null)}computeStatisticsHistograms(e){const r=o.c.fromJSON(e.pixelBlock),t=(0,c.SA)(r);return Promise.resolve(t)}async decode(e){const r=await(0,i.Y)(e.data,e.options);return r&&r.toJSON()}symbolize(e){e.pixelBlock=o.c.fromJSON(e.pixelBlock),e.extent=e.extent?d.c.fromJSON(e.extent):null;const r=this.symbolizer.symbolize(e);return Promise.resolve(null!=r?r.toJSON():null)}async updateSymbolizer(e){var r;this.symbolizer=u.c.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null===(r=this.symbolizer)||void 0===r?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,l.Su)(e.rasterFunctionJSON)}async process(e){var r;const t=this.rasterFunction.process({extent:d.c.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?o.c.fromJSON(e):null)),primaryPixelSizes:null===(r=e.primaryPixelSizes)||void 0===r?void 0:r.map((e=>null!=e?p.c.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=t?t.toJSON():null}stretch(e){const r=this.symbolizer.simpleStretch(o.c.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(null===r||void 0===r?void 0:r.toJSON())}estimateStatisticsHistograms(e){const r=(0,c.CW)(o.c.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=(0,n.SG)(o.c.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return r&&r.forEach(((e,t)=>{r.set(t,null===e||void 0===e?void 0:e.toJSON())})),Promise.resolve(r)}async mosaicAndTransform(e){var r;const t=e.srcPixelBlocks.map((e=>e?new o.c(e):null)),s=(0,n.Gw)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let i,l=s;return e.coefs&&(l=(0,n.S0)(s,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(i=(0,n.O8)(e.destDimension,e.gcsGrid),l=(0,m.UB)(l,e.isUV?"vector-uv":"vector-magdir",i)),{pixelBlock:null===(r=l)||void 0===r?void 0:r.toJSON(),localNorthDirections:i}}async createFlowMesh(e,r){const t={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:o}=await(0,S.__)(e.meshType,e.simulationSettings,t,r.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const r=d.c.fromJSON(e.projectedExtent),t=d.c.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new s.c({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,a.S0)(r.spatialReference,t.spatialReference,o))&&await(0,a.AJ)();const i=e.rasterTransform?(0,f.O)(e.rasterTransform):null;return(0,a.iG)({...e,projectedExtent:r,srcBufferExtent:t,datumTransformation:o,rasterTransform:i})}}}}]);
//# sourceMappingURL=2756.bba4baef.chunk.js.map
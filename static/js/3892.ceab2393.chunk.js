"use strict";(self.webpackChunkmy_assignment=self.webpackChunkmy_assignment||[]).push([[3892],{13376:(e,t,_)=>{var E;_.d(t,{A:()=>E}),function(e){e[e.Texture=0]="Texture",e[e.RenderBuffer=1]="RenderBuffer"}(E||(E={}))},73892:(e,t,_)=>{_.d(t,{w:()=>n});var E=_(80808),r=(_(98323),_(18668)),i=_(9188),s=_(60216),T=_(96940),R=_(13376),A=_(52740);class o extends A.O{constructor(e,t){switch(super(),this.context=e,Object.assign(this,t),this.internalFormat){case T.UV.R16F:case T.UV.R16I:case T.UV.R16UI:case T.UV.R32F:case T.UV.R32I:case T.UV.R32UI:case T.UV.R8_SNORM:case T.UV.R8:case T.UV.R8I:case T.UV.R8UI:this.pixelFormat=T.Id.RED}}static validate(e,t){return new o(e,t)}}let n=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,_=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(this.type=R.A.Texture,this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,"context"in e)this._descriptor=e,_=t;else{const _=o.validate(e,t);if(!_)throw new E.c("Texture descriptor invalid");this._descriptor=_}if(this._descriptor.context.type!==s.cV.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),d(this._descriptor.target)))throw new E.c("3D and array textures are not supported in WebGL1");this._descriptor.target===T.c5.TEXTURE_CUBE_MAP?this._setDataCubeMap(_):this.setData(_)}get glName(){return this._glName}get descriptor(){return this._descriptor}get gpuMemoryUsage(){return O.delete(this),(0,A.k)(this._descriptor)}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._glName&&this._descriptor.context.instanceCounter.decrement(T.y4.Texture,this),this._descriptor.context.gl&&this._glName&&(this._descriptor.context.unbindTexture(this),this._descriptor.context.gl.deleteTexture(this._glName),this._glName=null)}release(){this.dispose()}resize(e,t){const _=this._descriptor;if(_.width!==e||_.height!==t){if(this._wasImmutablyAllocated)throw new E.c("Immutable textures can't be resized!");_.width=e,_.height=t,this._descriptor.target===T.c5.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;for(let t=T.c5.TEXTURE_CUBE_MAP_POSITIVE_X;t<=T.c5.TEXTURE_CUBE_MAP_NEGATIVE_Z;t++)this._setData(e,t)}setData(e){this._setData(e)}_setData(e,t){var _,r;if(null===(_=this._descriptor.context)||void 0===_||!_.gl)return;const s=this._descriptor.context.gl;(0,i.m_)(s),this._glName||(this._glName=s.createTexture(),this._glName&&this._descriptor.context.instanceCounter.increment(T.y4.Texture,this)),void 0===e&&(e=null);const R=this._descriptor,A=null!==t&&void 0!==t?t:R.target,o=d(A);null===e&&(R.width=R.width||4,R.height=R.height||4,o&&(R.depth=null!==(r=R.depth)&&void 0!==r?r:1));const O=this._descriptor.context.bindTexture(this,n.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(n.TEXTURE_UNIT_FOR_UPDATES),a(this._descriptor.context,R),this._configurePixelStorage(),(0,i.m_)(s);const C=this._deriveInternalFormat();if(S(e)){let t="width"in e?e.width:e.codedWidth,_="height"in e?e.height:e.codedHeight;const E=1;e instanceof HTMLVideoElement&&(t=e.videoWidth,_=e.videoHeight),R.width&&R.height,o&&R.depth,R.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(A,C,R.hasMipmap,t,_,E),this._texImage(A,0,C,t,_,E,e),(0,i.m_)(s),R.hasMipmap&&this.generateMipmap(),R.width||(R.width=t),R.height||(R.height=_),o&&!R.depth&&(R.depth=E)}else{const{width:t,height:_,depth:r}=R;if(null==t||null==_)throw new E.c("Width and height must be specified!");if(o&&null==r)throw new E.c("Depth must be specified!");if(R.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(A,C,R.hasMipmap,t,_,r),I(e)){const i=e.levels,o=l(A,t,_,r),n=Math.min(o-1,i.length-1);null!=this._descriptor.context.gl2?s.texParameteri(R.target,this._descriptor.context.gl2.TEXTURE_MAX_LEVEL,n):R.hasMipmap=R.hasMipmap&&o===i.length;const a=C;if(!(a in T.sr))throw new E.c("Attempting to use compressed data with an uncompressed format!");this._forEachMipmapLevel(((e,t,_,E)=>{const r=i[Math.min(e,i.length-1)];this._compressedTexImage(A,e,a,t,_,E,r)}),n)}else this._texImage(A,0,C,t,_,r,e),(0,i.m_)(s),R.hasMipmap&&this.generateMipmap()}c(s,this._descriptor),N(s,this._descriptor),function(e,t){var _;const E=e.capabilities.textureFilterAnisotropic;if(!E)return;e.gl.texParameterf(t.target,E.TEXTURE_MAX_ANISOTROPY,null!==(_=t.maxAnisotropy)&&void 0!==_?_:1)}(this._descriptor.context,this._descriptor),(0,i.m_)(s),this._descriptor.context.bindTexture(O,n.TEXTURE_UNIT_FOR_UPDATES)}updateData(e,t,_,r,i,s){let T=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;s||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const R=this._descriptor.context.gl,A=this._descriptor.context.gl2,o=this._descriptor,a=this._deriveInternalFormat(),{pixelFormat:c,dataType:N,target:d,isImmutable:l}=o;if(l&&!this._wasImmutablyAllocated)throw new E.c("Cannot update immutable texture before allocation!");const O=this._descriptor.context.bindTexture(this,n.TEXTURE_UNIT_FOR_UPDATES,!0);if((t<0||_<0||r>o.width||i>o.height||t+r>o.width||_+i>o.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),T){if(!A)return void console.error("Webgl2 must be enabled to use dataRowOffset!");R.pixelStorei(A.UNPACK_SKIP_ROWS,T)}if(S(s)?A?A.texSubImage2D(d,e,t,_,r,i,c,N,s):R.texSubImage2D(d,e,t,_,c,N,s):I(s)?R.compressedTexSubImage2D(d,e,t,_,r,i,a,s.levels[e]):R.texSubImage2D(d,e,t,_,r,i,c,N,s),T){if(!A)return void console.error("Webgl2 must be enabled to use dataRowOffset!");R.pixelStorei(A.UNPACK_SKIP_ROWS,0)}this._descriptor.context.bindTexture(O,n.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(e,t,_,r,i,s,T,R){R||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const A=this._descriptor.context.gl2;if(null==A)throw new E.c("3D textures are not supported in WebGL1");const o=this._descriptor,a=this._deriveInternalFormat(),{pixelFormat:c,dataType:N,isImmutable:S,target:l}=o;if(S&&!this._wasImmutablyAllocated)throw new E.c("Cannot update immutable texture before allocation!");d(l)||console.warn("Attempting to set 3D texture data on a non-3D texture");const O=this._descriptor.context.bindTexture(this,n.TEXTURE_UNIT_FOR_UPDATES);if(this._descriptor.context.setActiveTexture(n.TEXTURE_UNIT_FOR_UPDATES),(t<0||_<0||r<0||i>o.width||s>o.height||T>o.depth||t+i>o.width||_+s>o.height||r+T>o.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),I(R))R=R.levels[e],A.compressedTexSubImage3D(l,e,t,_,r,i,s,T,a,R);else{const E=R;A.texSubImage3D(l,e,t,_,r,i,s,T,c,N,E)}this._descriptor.context.bindTexture(O,n.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const e=this._descriptor;if(!e.hasMipmap){if(this._wasImmutablyAllocated)throw new E.c("Cannot add mipmaps to immutable texture after allocation");e.hasMipmap=!0,this._samplingModeDirty=!0,a(this._descriptor.context,e)}e.samplingMode===T.Ud.LINEAR?(this._samplingModeDirty=!0,e.samplingMode=T.Ud.LINEAR_MIPMAP_NEAREST):e.samplingMode===T.Ud.NEAREST&&(this._samplingModeDirty=!0,e.samplingMode=T.Ud.NEAREST_MIPMAP_NEAREST);const t=this._descriptor.context.bindTexture(this,n.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(n.TEXTURE_UNIT_FOR_UPDATES),this._descriptor.context.gl.generateMipmap(e.target),this._descriptor.context.bindTexture(t,n.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,a(this._descriptor.context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const e=this._descriptor.context.gl,t=this._descriptor;this._samplingModeDirty&&(c(e,t),this._samplingModeDirty=!1),this._wrapModeDirty&&(N(e,t),this._wrapModeDirty=!1)}_deriveInternalFormat(){if(this._descriptor.context.type===s.cV.WEBGL1)return this._descriptor.internalFormat=this._descriptor.pixelFormat;if(null!=this._descriptor.internalFormat)return this._descriptor.internalFormat===T.Id.DEPTH_STENCIL&&(this._descriptor.internalFormat=T.Id.DEPTH24_STENCIL8),this._descriptor.internalFormat;switch(this._descriptor.dataType){case T.OK.FLOAT:switch(this._descriptor.pixelFormat){case T.Id.RGBA:return this._descriptor.internalFormat=T.UV.RGBA32F;case T.Id.RGB:return this._descriptor.internalFormat=T.UV.RGB32F;default:throw new E.c("Unable to derive format")}case T.OK.UNSIGNED_BYTE:switch(this._descriptor.pixelFormat){case T.Id.RGBA:return this._descriptor.internalFormat=T.UV.RGBA8;case T.Id.RGB:return this._descriptor.internalFormat=T.UV.RGB8}}return this._descriptor.internalFormat=this._descriptor.pixelFormat===T.Id.DEPTH_STENCIL?T.Id.DEPTH24_STENCIL8:this._descriptor.pixelFormat}_configurePixelStorage(){const e=this._descriptor.context.gl,{unpackAlignment:t,flipped:_,preMultiplyAlpha:E}=this._descriptor;e.pixelStorei(e.UNPACK_ALIGNMENT,t),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,_?1:0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E?1:0)}_texStorage(e,t,_,r,i,s){const R=this._descriptor.context.gl2;if(null==R)throw new E.c("Immutable textures are not supported in WebGL1");if(!(t in T.UV))throw new E.c("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const A=_?l(e,r,i,s):1;if(d(e)){if(null==s)throw new E.c("Missing depth dimension for 3D texture upload");R.texStorage3D(e,A,t,r,i,s)}else R.texStorage2D(e,A,t,r,i);this._wasImmutablyAllocated=!0}_texImage(e,t,_,r,i,T,R){const A=this._descriptor.context.gl,o=d(e),{isImmutable:n,pixelFormat:a,dataType:c}=this._descriptor,N=this._descriptor.context.type===s.cV.WEBGL2,I=N?A:null;if(N||!S(R))if(n){if(null!=R){const _=R;if(o){if(null==T)throw new E.c("Missing depth dimension for 3D texture upload");I.texSubImage3D(e,t,0,0,0,r,i,T,a,c,_)}else A.texSubImage2D(e,t,0,0,r,i,a,c,_)}}else{const s=R;if(o){if(null==T)throw new E.c("Missing depth dimension for 3D texture upload");I.texImage3D(e,t,_,r,i,T,0,a,c,s)}else A.texImage2D(e,t,_,r,i,0,a,c,s)}else A.texImage2D(e,0,_,a,c,R)}_compressedTexImage(e,t,_,r,i,T,R){const A=this._descriptor.context.gl;let o=null;const n=d(e),a=this._descriptor.isImmutable;if(n){if(this._descriptor.context.type!==s.cV.WEBGL2)throw new E.c("3D textures are not supported in WebGL1");o=A}if(a){if(null!=R)if(n){if(null==T)throw new E.c("Missing depth dimension for 3D texture upload");o.compressedTexSubImage3D(e,t,0,0,0,r,i,T,_,R)}else A.compressedTexSubImage2D(e,t,0,0,r,i,_,R)}else if(n){if(null==T)throw new E.c("Missing depth dimension for 3D texture upload");o.compressedTexImage3D(e,t,_,r,i,T,0,R)}else A.compressedTexImage2D(e,t,_,r,i,0,R)}_forEachMipmapLevel(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,{width:_,height:r,depth:i,hasMipmap:s,target:R}=this._descriptor;const A=R===T.c5.TEXTURE_3D;if(null==_||null==r||A&&null==i)throw new E.c("Missing texture dimensions for mipmap calculation");for(let E=0;e(E,_,r,i),s&&(1!==_||1!==r||A&&1!==i)&&!(E>=t);++E)_=Math.max(1,_>>1),r=Math.max(1,r>>1),A&&(i=Math.max(1,i>>1))}};function a(e,t){(null!=t.width&&t.width<0||null!=t.height&&t.height<0||null!=t.depth&&t.depth<0)&&console.error("Negative dimension parameters are not allowed!");const _=e.type===s.cV.WEBGL2;_||!t.isImmutable&&!d(t.target)||console.error("Immutable and 3D-like textures are not supported in WebGL1!"),_||null!=t.width&&(0,r.Ki)(t.width)&&null!=t.height&&(0,r.Ki)(t.height)||("number"==typeof t.wrapMode?t.wrapMode!==T.Qz.CLAMP_TO_EDGE&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):t.wrapMode.s===T.Qz.CLAMP_TO_EDGE&&t.wrapMode.t===T.Qz.CLAMP_TO_EDGE||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),t.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}function c(e,t){let _=t.samplingMode,E=t.samplingMode;_===T.Ud.LINEAR_MIPMAP_NEAREST||_===T.Ud.LINEAR_MIPMAP_LINEAR?(_=T.Ud.LINEAR,t.hasMipmap||(E=T.Ud.LINEAR)):_!==T.Ud.NEAREST_MIPMAP_NEAREST&&_!==T.Ud.NEAREST_MIPMAP_LINEAR||(_=T.Ud.NEAREST,t.hasMipmap||(E=T.Ud.NEAREST)),e.texParameteri(t.target,e.TEXTURE_MAG_FILTER,_),e.texParameteri(t.target,e.TEXTURE_MIN_FILTER,E)}function N(e,t){"number"==typeof t.wrapMode?(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode.t))}function I(e){return null!=e&&"type"in e&&"compressed"===e.type}function S(e){return null!=e&&!I(e)&&!function(e){return null!=e&&"byteLength"in e}(e)}function d(e){return e===T.c5.TEXTURE_3D||e===T.c5.TEXTURE_2D_ARRAY}function l(e,t,_){let E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=Math.max(t,_);return e===T.c5.TEXTURE_3D&&(r=Math.max(r,E)),Math.round(Math.log(r)/Math.LN2)+1}n.TEXTURE_UNIT_FOR_UPDATES=0;const O=new Map},52740:(e,t,_)=>{_.d(t,{O:()=>i,k:()=>s});var E=_(96940),r=_(72192);class i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;this.width=e,this.height=t,this.target=E.c5.TEXTURE_2D,this.pixelFormat=E.Id.RGBA,this.dataType=E.OK.UNSIGNED_BYTE,this.samplingMode=E.Ud.LINEAR,this.wrapMode=E.Qz.REPEAT,this.maxAnisotropy=1,this.flipped=!1,this.hasMipmap=!1,this.isOpaque=!1,this.unpackAlignment=4,this.preMultiplyAlpha=!1,this.depth=1,this.isImmutable=!1}}function s(e){return e.width<=0||e.height<=0?0:e.width*e.height*(e.hasMipmap?4/3:1)*(null==e.internalFormat?4:(0,r.O4)(e.internalFormat))}},72192:(e,t,_)=>{_.d(t,{Ix:()=>s,O4:()=>T,UL:()=>i,mE:()=>r});_(98323);var E=_(96940);function r(e){const t=e.gl;switch(t.getError()){case t.NO_ERROR:return null;case t.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case t.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case t.INVALID_OPERATION:return"The specified command is not allowed for the current state";case t.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case t.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case t.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function i(e,t,_,E){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;const i=e.gl;e.bindBuffer(_);for(const A of E){var s;const _=t.get(A.name);void 0===_&&console.error("There is no location for vertex attribute '".concat(A.name,"' defined."));const E=r*A.stride;if(A.count<=4)i.vertexAttribPointer(_,A.count,A.type,A.normalized,A.stride,A.offset+E),i.enableVertexAttribArray(_),A.divisor>0&&(null===(s=e.gl2)||void 0===s||s.vertexAttribDivisor(_,A.divisor));else if(9===A.count)for(let t=0;t<3;t++){var T;i.vertexAttribPointer(_+t,3,A.type,A.normalized,A.stride,A.offset+12*t+E),i.enableVertexAttribArray(_+t),A.divisor>0&&(null===(T=e.gl2)||void 0===T||T.vertexAttribDivisor(_+t,A.divisor))}else if(16===A.count)for(let t=0;t<4;t++){var R;i.vertexAttribPointer(_+t,4,A.type,A.normalized,A.stride,A.offset+16*t+E),i.enableVertexAttribArray(_+t),A.divisor>0&&(null===(R=e.gl2)||void 0===R||R.vertexAttribDivisor(_+t,A.divisor))}else console.error("Unsupported vertex attribute element count: "+A.count)}}function s(e,t,_,r){const i=e.gl;e.bindBuffer(_);for(const E of r){var s;const _=t.get(E.name);if(E.count<=4)i.disableVertexAttribArray(_),E.divisor&&E.divisor>0&&(null===(s=e.gl2)||void 0===s||s.vertexAttribDivisor(_,0));else if(9===E.count)for(let t=0;t<3;t++){var T;i.disableVertexAttribArray(_+t),E.divisor&&E.divisor>0&&(null===(T=e.gl2)||void 0===T||T.vertexAttribDivisor(_+t,0))}else if(16===E.count)for(let t=0;t<4;t++){var R;i.disableVertexAttribArray(_+t),E.divisor&&E.divisor>0&&(null===(R=e.gl2)||void 0===R||R.vertexAttribDivisor(_+t,0))}else console.error("Unsupported vertex attribute element count: "+E.count)}e.unbindBuffer(E.K.ARRAY_BUFFER)}function T(e){switch(e){case E.Id.ALPHA:case E.Id.LUMINANCE:case E.Id.RED:case E.Id.RED_INTEGER:case E.UV.R8:case E.UV.R8I:case E.UV.R8UI:case E.UV.R8_SNORM:case E.Qb.STENCIL_INDEX8:return 1;case E.Id.LUMINANCE_ALPHA:case E.Id.RG:case E.Id.RG_INTEGER:case E.UV.RGBA4:case E.UV.R16F:case E.UV.R16I:case E.UV.R16UI:case E.UV.RG8:case E.UV.RG8I:case E.UV.RG8UI:case E.UV.RG8_SNORM:case E.UV.RGB565:case E.UV.RGB5_A1:case E.Qb.DEPTH_COMPONENT16:return 2;case E.Id.DEPTH_COMPONENT:case E.Id.RGB:case E.Id.RGB_INTEGER:case E.UV.RGB8:case E.UV.RGB8I:case E.UV.RGB8UI:case E.UV.RGB8_SNORM:case E.UV.SRGB8:case E.Qb.DEPTH_COMPONENT24:return 3;case E.Id.DEPTH_STENCIL:case E.Id.DEPTH24_STENCIL8:case E.Id.RGBA:case E.Id.RGBA_INTEGER:case E.UV.RGBA8:case E.UV.R32F:case E.UV.R11F_G11F_B10F:case E.UV.RG16F:case E.UV.R32I:case E.UV.R32UI:case E.UV.RG16I:case E.UV.RG16UI:case E.UV.RGBA8I:case E.UV.RGBA8UI:case E.UV.RGBA8_SNORM:case E.UV.SRGB8_ALPHA8:case E.UV.RGB9_E5:case E.UV.RGB10_A2UI:case E.UV.RGB10_A2:case E.Qb.DEPTH_STENCIL:case E.Qb.DEPTH_COMPONENT32F:case E.Qb.DEPTH24_STENCIL8:return 4;case E.Qb.DEPTH32F_STENCIL8:return 5;case E.UV.RGB16F:case E.UV.RGB16I:case E.UV.RGB16UI:return 6;case E.UV.RG32F:case E.UV.RG32I:case E.UV.RG32UI:case E.UV.RGBA16F:case E.UV.RGBA16I:case E.UV.RGBA16UI:return 8;case E.UV.RGB32F:case E.UV.RGB32I:case E.UV.RGB32UI:return 12;case E.UV.RGBA32F:case E.UV.RGBA32I:case E.UV.RGBA32UI:return 16;case E.sr.COMPRESSED_RGB_S3TC_DXT1_EXT:case E.sr.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case E.sr.COMPRESSED_RGBA_S3TC_DXT3_EXT:case E.sr.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case E.sr.COMPRESSED_R11_EAC:case E.sr.COMPRESSED_SIGNED_R11_EAC:case E.sr.COMPRESSED_RGB8_ETC2:case E.sr.COMPRESSED_SRGB8_ETC2:case E.sr.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case E.sr.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case E.sr.COMPRESSED_RG11_EAC:case E.sr.COMPRESSED_SIGNED_RG11_EAC:case E.sr.COMPRESSED_RGBA8_ETC2_EAC:case E.sr.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}},9188:(e,t,_)=>{_.d(t,{E5:()=>R,gv:()=>T,m_:()=>A});var E=_(80808),r=_(98323);const i=_(67424).c.getLogger("esri.views.webgl.checkWebGLError");const s=!!(0,r.c)("enable-feature:webgl-debug");function T(){return s}function R(){return s}function A(e){if(T()){const t=e.getError();if(t){const _=function(e,t){switch(t){case e.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case e.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case e.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case e.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case e.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case e.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(e,t),r=(new Error).stack;i.error(new E.c("webgl-error","WebGL error occurred",{message:_,stack:r}))}}}},96940:(e,t,_)=>{var E,r,i,s,T,R,A,o,n,a,c,N,I,S,d,l,O,C,U,u;_.d(t,{Ck:()=>o,GE:()=>P,Gs:()=>U,IL:()=>F,Id:()=>S,K:()=>T,OK:()=>l,QD:()=>a,Qb:()=>O,Qx:()=>D,Qz:()=>N,SC:()=>R,UV:()=>d,Ud:()=>c,Uf:()=>r,WK:()=>p,YT:()=>s,_m:()=>C,c5:()=>I,et:()=>n,g7:()=>M,kl:()=>u,oh:()=>f,sl:()=>E,sr:()=>L,sz:()=>G,vs:()=>A,w$:()=>i,y4:()=>h}),function(e){e[e.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",e[e.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",e[e.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT"}(E||(E={})),function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(r||(r={})),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_COLOR=768]="SRC_COLOR",e[e.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.DST_ALPHA=772]="DST_ALPHA",e[e.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",e[e.DST_COLOR=774]="DST_COLOR",e[e.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=32769]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA"}(i||(i={})),function(e){e[e.ADD=32774]="ADD",e[e.MIN=32775]="MIN",e[e.MAX=32776]="MAX",e[e.SUBTRACT=32778]="SUBTRACT",e[e.REVERSE_SUBTRACT=32779]="REVERSE_SUBTRACT"}(s||(s={})),function(e){e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",e[e.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",e[e.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",e[e.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",e[e.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",e[e.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER"}(T||(T={})),function(e){e[e.FRONT=1028]="FRONT",e[e.BACK=1029]="BACK",e[e.FRONT_AND_BACK=1032]="FRONT_AND_BACK"}(R||(R={})),function(e){e[e.CW=2304]="CW",e[e.CCW=2305]="CCW"}(A||(A={})),function(e){e[e.BYTE=5120]="BYTE",e[e.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",e[e.SHORT=5122]="SHORT",e[e.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",e[e.INT=5124]="INT",e[e.UNSIGNED_INT=5125]="UNSIGNED_INT",e[e.FLOAT=5126]="FLOAT"}(o||(o={})),function(e){e[e.NEVER=512]="NEVER",e[e.LESS=513]="LESS",e[e.EQUAL=514]="EQUAL",e[e.LEQUAL=515]="LEQUAL",e[e.GREATER=516]="GREATER",e[e.NOTEQUAL=517]="NOTEQUAL",e[e.GEQUAL=518]="GEQUAL",e[e.ALWAYS=519]="ALWAYS"}(n||(n={})),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=7680]="KEEP",e[e.REPLACE=7681]="REPLACE",e[e.INCR=7682]="INCR",e[e.DECR=7683]="DECR",e[e.INVERT=5386]="INVERT",e[e.INCR_WRAP=34055]="INCR_WRAP",e[e.DECR_WRAP=34056]="DECR_WRAP"}(a||(a={})),function(e){e[e.NEAREST=9728]="NEAREST",e[e.LINEAR=9729]="LINEAR",e[e.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",e[e.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR"}(c||(c={})),function(e){e[e.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",e[e.REPEAT=10497]="REPEAT",e[e.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT"}(N||(N={})),function(e){e[e.TEXTURE_2D=3553]="TEXTURE_2D",e[e.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",e[e.TEXTURE_3D=32879]="TEXTURE_3D",e[e.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",e[e.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",e[e.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",e[e.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",e[e.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY"}(I||(I={})),function(e){e[e.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",e[e.DEPTH_STENCIL=34041]="DEPTH_STENCIL",e[e.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",e[e.ALPHA=6406]="ALPHA",e[e.RGB=6407]="RGB",e[e.RGBA=6408]="RGBA",e[e.LUMINANCE=6409]="LUMINANCE",e[e.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",e[e.RED=6403]="RED",e[e.RG=33319]="RG",e[e.RED_INTEGER=36244]="RED_INTEGER",e[e.RG_INTEGER=33320]="RG_INTEGER",e[e.RGB_INTEGER=36248]="RGB_INTEGER",e[e.RGBA_INTEGER=36249]="RGBA_INTEGER"}(S||(S={})),function(e){e[e.RGBA4=32854]="RGBA4",e[e.R16F=33325]="R16F",e[e.RG16F=33327]="RG16F",e[e.RGB32F=34837]="RGB32F",e[e.RGBA16F=34842]="RGBA16F",e[e.R32F=33326]="R32F",e[e.RG32F=33328]="RG32F",e[e.RGBA32F=34836]="RGBA32F",e[e.R11F_G11F_B10F=35898]="R11F_G11F_B10F",e[e.RGB8=32849]="RGB8",e[e.RGBA8=32856]="RGBA8",e[e.RGB5_A1=32855]="RGB5_A1",e[e.R8=33321]="R8",e[e.RG8=33323]="RG8",e[e.R8I=33329]="R8I",e[e.R8UI=33330]="R8UI",e[e.R16I=33331]="R16I",e[e.R16UI=33332]="R16UI",e[e.R32I=33333]="R32I",e[e.R32UI=33334]="R32UI",e[e.RG8I=33335]="RG8I",e[e.RG8UI=33336]="RG8UI",e[e.RG16I=33337]="RG16I",e[e.RG16UI=33338]="RG16UI",e[e.RG32I=33339]="RG32I",e[e.RG32UI=33340]="RG32UI",e[e.RGB16F=34843]="RGB16F",e[e.RGB9_E5=35901]="RGB9_E5",e[e.SRGB8=35905]="SRGB8",e[e.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",e[e.RGB565=36194]="RGB565",e[e.RGBA32UI=36208]="RGBA32UI",e[e.RGB32UI=36209]="RGB32UI",e[e.RGBA16UI=36214]="RGBA16UI",e[e.RGB16UI=36215]="RGB16UI",e[e.RGBA8UI=36220]="RGBA8UI",e[e.RGB8UI=36221]="RGB8UI",e[e.RGBA32I=36226]="RGBA32I",e[e.RGB32I=36227]="RGB32I",e[e.RGBA16I=36232]="RGBA16I",e[e.RGB16I=36233]="RGB16I",e[e.RGBA8I=36238]="RGBA8I",e[e.RGB8I=36239]="RGB8I",e[e.R8_SNORM=36756]="R8_SNORM",e[e.RG8_SNORM=36757]="RG8_SNORM",e[e.RGB8_SNORM=36758]="RGB8_SNORM",e[e.RGBA8_SNORM=36759]="RGBA8_SNORM",e[e.RGB10_A2=32857]="RGB10_A2",e[e.RGB10_A2UI=36975]="RGB10_A2UI"}(d||(d={})),function(e){e[e.FLOAT=5126]="FLOAT",e[e.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",e[e.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",e[e.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",e[e.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",e[e.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",e[e.BYTE=5120]="BYTE",e[e.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",e[e.SHORT=5122]="SHORT",e[e.UNSIGNED_INT=5125]="UNSIGNED_INT",e[e.INT=5124]="INT",e[e.HALF_FLOAT=5131]="HALF_FLOAT",e[e.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",e[e.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",e[e.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",e[e.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV"}(l||(l={})),function(e){e[e.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",e[e.STENCIL_INDEX8=36168]="STENCIL_INDEX8",e[e.DEPTH_STENCIL=34041]="DEPTH_STENCIL",e[e.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",e[e.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",e[e.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",e[e.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8"}(O||(O={})),function(e){e[e.STATIC_DRAW=35044]="STATIC_DRAW",e[e.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",e[e.STREAM_DRAW=35040]="STREAM_DRAW",e[e.STATIC_READ=35045]="STATIC_READ",e[e.DYNAMIC_READ=35049]="DYNAMIC_READ",e[e.STREAM_READ=35041]="STREAM_READ",e[e.STATIC_COPY=35046]="STATIC_COPY",e[e.DYNAMIC_COPY=35050]="DYNAMIC_COPY",e[e.STREAM_COPY=35042]="STREAM_COPY"}(C||(C={})),function(e){e[e.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",e[e.VERTEX_SHADER=35633]="VERTEX_SHADER"}(U||(U={})),function(e){e[e.FRAMEBUFFER=36160]="FRAMEBUFFER",e[e.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",e[e.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER"}(u||(u={}));const M=33984;var h,D,p;!function(e){e[e.Texture=0]="Texture",e[e.BufferObject=1]="BufferObject",e[e.VertexArrayObject=2]="VertexArrayObject",e[e.Shader=3]="Shader",e[e.Program=4]="Program",e[e.FramebufferObject=5]="FramebufferObject",e[e.Renderbuffer=6]="Renderbuffer",e[e.Sync=7]="Sync",e[e.UNCOUNTED=8]="UNCOUNTED",e[e.LinesOfCode=8]="LinesOfCode",e[e.Uniform=9]="Uniform",e[e.COUNT=10]="COUNT"}(h||(h={})),function(e){e[e.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",e[e.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",e[e.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",e[e.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",e[e.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",e[e.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",e[e.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",e[e.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",e[e.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",e[e.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",e[e.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",e[e.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",e[e.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",e[e.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",e[e.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",e[e.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15"}(D||(D={})),function(e){e[e.NONE=0]="NONE",e[e.BACK=1029]="BACK"}(p||(p={}));const P=33306;var L,G,m,B,f,F,g;!function(e){e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"}(L||(L={})),function(e){e[e.FLOAT=5126]="FLOAT",e[e.FLOAT_VEC2=35664]="FLOAT_VEC2",e[e.FLOAT_VEC3=35665]="FLOAT_VEC3",e[e.FLOAT_VEC4=35666]="FLOAT_VEC4",e[e.INT=5124]="INT",e[e.INT_VEC2=35667]="INT_VEC2",e[e.INT_VEC3=35668]="INT_VEC3",e[e.INT_VEC4=35669]="INT_VEC4",e[e.BOOL=35670]="BOOL",e[e.BOOL_VEC2=35671]="BOOL_VEC2",e[e.BOOL_VEC3=35672]="BOOL_VEC3",e[e.BOOL_VEC4=35673]="BOOL_VEC4",e[e.FLOAT_MAT2=35674]="FLOAT_MAT2",e[e.FLOAT_MAT3=35675]="FLOAT_MAT3",e[e.FLOAT_MAT4=35676]="FLOAT_MAT4",e[e.SAMPLER_2D=35678]="SAMPLER_2D",e[e.SAMPLER_CUBE=35680]="SAMPLER_CUBE",e[e.UNSIGNED_INT=5125]="UNSIGNED_INT",e[e.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",e[e.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",e[e.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",e[e.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",e[e.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",e[e.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",e[e.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",e[e.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",e[e.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",e[e.SAMPLER_3D=35679]="SAMPLER_3D",e[e.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",e[e.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",e[e.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",e[e.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",e[e.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",e[e.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",e[e.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",e[e.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",e[e.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",e[e.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",e[e.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",e[e.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY"}(G||(G={})),function(e){e[e.OBJECT_TYPE=37138]="OBJECT_TYPE",e[e.SYNC_CONDITION=37139]="SYNC_CONDITION",e[e.SYNC_STATUS=37140]="SYNC_STATUS",e[e.SYNC_FLAGS=37141]="SYNC_FLAGS"}(m||(m={})),function(e){e[e.UNSIGNALED=37144]="UNSIGNALED",e[e.SIGNALED=37145]="SIGNALED"}(B||(B={})),function(e){e[e.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",e[e.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",e[e.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",e[e.WAIT_FAILED=37149]="WAIT_FAILED"}(f||(f={})),function(e){e[e.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE"}(F||(F={})),function(e){e[e.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT"}(g||(g={}))}}]);
//# sourceMappingURL=3892.ceab2393.chunk.js.map
"use strict";(self.webpackChunkmy_assignment=self.webpackChunkmy_assignment||[]).push([[4580],{14580:(e,t,s)=>{s.r(t),s.d(t,{default:()=>_});var r=s(51944),n=s(80808),i=s(77328),a=s(6016),o=s(24704),l=(s(23512),s(43968),s(98323),s(32288)),u=s(55968),d=s(71664),p=s(4824),c=s(81840);const h=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(){super(...arguments),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(e){e?this._doPause():this._isUserPaused||this._doResume()}};return(0,r._)([(0,o.qq)()],t.prototype,"_isUserPaused",void 0),(0,r._)([(0,o.qq)({readOnly:!0})],t.prototype,"connectionStatus",null),(0,r._)([(0,o.qq)({type:c.c})],t.prototype,"filter",void 0),t=(0,r._)([(0,l.c)("esri.layers.mixins.StreamLayerView")],t),t};function y(e,t){if(null==e&&null==t)return null;const s={};return null!=t&&(s.geometry=t.toJSON()),null!=e&&(s.where=e),s}let m=class extends(h(d.default)){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([(0,a.aE)((()=>this.layer.customParameters),(e=>this._proxy.updateCustomParameters(e))),this.layer.on("send-message-to-socket",(e=>this._proxy.sendMessageToSocket(e))),this.layer.on("send-message-to-client",(e=>this._proxy.sendMessageToClient(e))),(0,a.aE)((()=>this.layer.purgeOptions),(()=>this._update())),(0,a.aE)((()=>this.suspended),this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new n.c("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return(0,i.Ip)(e.map((e=>this.on(e,t))));const s=["data-received","message-received"].includes(e);s&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const r=super.on(e,t),n=this;return(0,i.uU)((()=>{r.remove(),s&&(n._proxy.closed||n.hasEventListener(e)||n._proxy.enableEvent(e,!1))}))}queryLatestObservations(e,t){var s,r,i;if(!(null!==(s=this.layer.timeInfo)&&void 0!==s&&s.endField||null!==(r=this.layer.timeInfo)&&void 0!==r&&r.startField||null!==(i=this.layer.timeInfo)&&void 0!==i&&i.trackIdField))throw new n.c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then((e=>{const t=u.c.fromJSON(e);return t.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),t}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var e;null===(e=this._proxy)||void 0===e||e.pauseStream()}_doResume(){var e;null===(e=this._proxy)||void 0===e||e.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t="".concat(JSON.stringify(this.layer.purgeOptions),".").concat(JSON.stringify(y(this.layer.definitionExpression,this.layer.geometryDefinition)),")");return super._createTileRendererHash(e)+t}async _createServiceOptions(){var e;const t=this.layer,{objectIdField:s}=t,r=t.fields.map((e=>e.toJSON())),n=(0,p.YF)(t.geometryType),i=(null===(e=t.timeInfo)||void 0===e?void 0:e.toJSON())||null,a=t.spatialReference?t.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:n,objectIdField:s,timeInfo:i,source:this.layer.parsedUrl,serviceFilter:y(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:a,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:t.customParameters}}};(0,r._)([(0,o.qq)()],m.prototype,"pipelineConnectionStatus",void 0),(0,r._)([(0,o.qq)()],m.prototype,"pipelineErrorString",void 0),(0,r._)([(0,o.qq)({readOnly:!0})],m.prototype,"connectionError",null),(0,r._)([(0,o.qq)({readOnly:!0})],m.prototype,"_streamConnectionStatus",null),m=(0,r._)([(0,l.c)("esri.views.2d.layers.StreamLayerView2D")],m);const _=m}}]);
//# sourceMappingURL=4580.a711ca3c.chunk.js.map